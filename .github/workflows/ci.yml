name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
      RUSTFLAGS: -D warnings
      RUSTDOCFLAGS: -D warnings
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: leynos/shared-actions/.github/actions/setup-rust@c366af3e25f7cfb318dccfe58a92d6df5dffdf17

      - name: Install bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76  # v2
        with:
          bun-version: '1.2.21'

      - name: Check formatting
        run: make check-fmt

      - name: Install Mermaid CLI
        run: |
          set -euxo pipefail
          bun install --no-progress --global @mermaid-js/mermaid-cli@11.9.0
          bun x @puppeteer/browsers browsers install chrome-headless-shell
          mmdc --version

      - name: Setup uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41  # v7.1.2
        with:
          version: 'latest'

      - name: Install Nixie
        run: uv tool install --from git+https://github.com/leynos/nixie nixie

      - name: Nixie
        run: make nixie

      - name: Markdown lint
        uses: DavidAnson/markdownlint-cli2-action@992badcdf24e3b8eb7e87ff9287fe931bcb00c6e  # v20
        with:
          globs: '**/*.md'

      - name: Lint
        run: make lint

      - name: Test and Measure Coverage (with features)
        if: ${{ matrix.coverage && matrix.features != '' }}
        uses: leynos/shared-actions/.github/actions/generate-coverage@c366af3e25f7cfb318dccfe58a92d6df5dffdf17
        with:
          output-path: lcov.info
          format: lcov
          features: rstest-bdd/diagnostics ${{ matrix.features }}
          with-default-features: ${{ matrix.with-default-features }}

      - name: Test and Measure Coverage (no features)
        if: ${{ matrix.coverage && matrix.features == '' }}
        uses: leynos/shared-actions/.github/actions/generate-coverage@c366af3e25f7cfb318dccfe58a92d6df5dffdf17
        with:
          output-path: lcov.info
          format: lcov
          features: rstest-bdd/diagnostics
          with-default-features: ${{ matrix.with-default-features }}

      - name: Publish dry run
        run: make publish-check

      - name: Upload coverage data to CodeScene
        if: ${{ matrix.coverage && env.CS_ACCESS_TOKEN && vars.CODESCENE_CLI_SHA256 }}
        uses: leynos/shared-actions/.github/actions/upload-codescene-coverage@c366af3e25f7cfb318dccfe58a92d6df5dffdf17
        with:
          format: lcov
          access-token: ${{ env.CS_ACCESS_TOKEN }}
          installer-checksum: ${{ vars.CODESCENE_CLI_SHA256 }}
